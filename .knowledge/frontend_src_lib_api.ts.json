{"is_source_file": true, "format": "TypeScript", "description": "This file provides a client-side API layer for a notes management application, implementing mock data storage with localStorage. It includes functions for user authentication, note CRUD operations, and category retrieval, intended for use in a frontend project with placeholder server interactions.", "external_files": ["./types"], "external_methods": [], "published": ["apiLogin", "apiSignup", "apiLogout", "apiGetCurrentUser", "apiListNotes", "apiGetNote", "apiCreateNote", "apiUpdateNote", "apiDeleteNote", "getCategoriesFromNotes"], "classes": [], "methods": [{"name": "function loadNotes(): Note[] { loadNotes", "description": "Loads notes from localStorage, handling deserialization and errors.", "scope": "", "scopeKind": ""}, {"name": "function saveNotes(notes: Note[]) { saveNotes", "description": "Saves notes array to localStorage.", "scope": "", "scopeKind": ""}, {"name": "function nowISO() { nowISO", "description": "Returns current timestamp in ISO format.", "scope": "", "scopeKind": ""}, {"name": "function genId(): ID { genId", "description": "Generates a unique ID using random string and timestamp.", "scope": "", "scopeKind": ""}, {"name": "function loadUser(): User | null { loadUser", "description": "Loads user info from localStorage.", "scope": "", "scopeKind": ""}, {"name": "function saveUser(user: User | null) { saveUser", "description": "Saves or removes user info in localStorage.", "scope": "", "scopeKind": ""}, {"name": "export async function apiCreateNote(input: NoteInput): Promise<ApiResult<Note>> { apiCreateNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiDeleteNote(id: ID): Promise<ApiResult<true>> { apiDeleteNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiGetCurrentUser(): Promise<ApiResult<User | null>> { apiGetCurrentUser", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiGetNote(id: ID): Promise<ApiResult<Note | null>> { apiGetNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiListNotes(query?: { search?: string; category?: string }): Promise<ApiR/ apiListNotes", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiLogin(payload: AuthCredentials): Promise<ApiResult<User>> { apiLogin", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiLogout(): Promise<ApiResult<true>> { apiLogout", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiSignup(payload: AuthCredentials): Promise<ApiResult<User>> { apiSignup", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export async function apiUpdateNote(id: ID, input: NoteInput): Promise<ApiResult<Note>> { apiUpdateNote", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export function getCategoriesFromNotes(notes: Note[]): string[] { getCategoriesFromNotes", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["localStorage.getItem", "localStorage.setItem", "localStorage.removeItem", "JSON.parse", "JSON.stringify", "Math.random", "Date.now", "Array.prototype.sort", "Array.prototype.filter", "Array.prototype.unshift", "Array.prototype.find", "Array.prototype.filter", "Array.prototype.add"], "search-terms": ["localStorage", "mock API", "notes CRUD", "client-side storage", "NoteInput", "authCredentials", "TypeScript API"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "STORAGE_KEYS", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^const STORAGE_KEYS = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "apiCreateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiCreateNote(input: NoteInput): Promise<ApiResult<Note>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiDeleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiDeleteNote(id: ID): Promise<ApiResult<true>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiGetCurrentUser", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiGetCurrentUser(): Promise<ApiResult<User | null>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiGetNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiGetNote(id: ID): Promise<ApiResult<Note | null>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiListNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiListNotes(query?: { search?: string; category?: string }): Promise<ApiR/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiLogin", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiLogin(payload: AuthCredentials): Promise<ApiResult<User>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiLogout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiLogout(): Promise<ApiResult<true>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiSignup", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiSignup(payload: AuthCredentials): Promise<ApiResult<User>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiUpdateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export async function apiUpdateNote(id: ID, input: NoteInput): Promise<ApiResult<Note>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    category: input.category || \"Uncategorized\",$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "genId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function genId(): ID {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getCategoriesFromNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^export function getCategoriesFromNotes(notes: Note[]): string[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    ...notes[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "loadNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function loadNotes(): Note[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "loadUser", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function loadUser(): User | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "n", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  for (const n of notes) set.add(n.category || \"Uncategorized\");$/", "language": "TypeScript", "kind": "constant", "scope": "getCategoriesFromNotes", "scopeKind": "function"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const next = notes.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "apiDeleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const note = notes.find((n) => n.id === id) || null;$/", "language": "TypeScript", "kind": "constant", "scope": "apiGetNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "apiCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "apiDeleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "apiGetNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const notes = loadNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "nowISO", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function nowISO() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    const q = query.search.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "apiListNotes", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    const raw = localStorage.getItem(STORAGE_KEYS.notes);$/", "language": "TypeScript", "kind": "constant", "scope": "loadNotes", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^    const raw = localStorage.getItem(STORAGE_KEYS.user);$/", "language": "TypeScript", "kind": "constant", "scope": "loadUser", "scopeKind": "function"}, {"_type": "tag", "name": "saveNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function saveNotes(notes: Note[]) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "saveUser", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^function saveUser(user: User | null) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const set = new Set<string>();$/", "language": "TypeScript", "kind": "constant", "scope": "getCategoriesFromNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const user = loadUser();$/", "language": "TypeScript", "kind": "constant", "scope": "apiGetCurrentUser", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const user: User = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiLogin", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/lib/api.ts", "pattern": "/^  const user: User = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiSignup", "scopeKind": "function"}], "hash": "617843e0d0a985ad563d4d0f3c45ca9d", "format-version": 4, "code-base-name": "frontend", "filename": "frontend/src/lib/api.ts", "revision_history": [{"27": ""}]}