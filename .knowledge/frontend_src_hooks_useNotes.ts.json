{"is_source_file": true, "format": "TypeScript", "description": "This file defines a React hook called useNotes for managing notes state, including fetching, creating, updating, and deleting notes, as well as filtering by search term and category.", "external_files": ["@/lib/api", "@/lib/types"], "external_methods": ["apiCreateNote", "apiDeleteNote", "apiListNotes", "apiUpdateNote", "getCategoriesFromNotes"], "published": ["useNotes"], "classes": [], "methods": [{"name": "export function useNotes(): NotesState { useNotes", "description": "React hook for managing notes state, including fetch, create, update, delete, and filter operations.", "scope": "", "scopeKind": ""}], "calls": ["apiListNotes", "apiCreateNote", "apiUpdateNote", "apiDeleteNote", "getCategoriesFromNotes"], "search-terms": ["useNotes", "notes state", "React hook", "notes management", "category filter", "search filter", "API calls"], "state": 2, "file_id": 15, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesState", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^interface NotesState {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "categories", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  categories: string[];$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "categories", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const categories = useMemo(() => getCategoriesFromNotes(notes), [notes]);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  category: string;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [category, setCategory] = useState<string>(\"All\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const createNote = useCallback(async (input: NoteInput) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  createNote: (input: NoteInput) => Promise<ApiResult<Note>>;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const deleteNote = useCallback(async (id: string) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  deleteNote: (id: string) => Promise<ApiResult<true>>;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [loading, setLoading] = useState<boolean>(true);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  loading: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  notes: Note[];$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "refresh", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const refresh = useCallback(async () => {$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "refresh", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  refresh: () => Promise<void>;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [search, setSearch] = useState<string>(\"\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  search: string;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "setCategory", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [category, setCategory] = useState<string>(\"All\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setCategory", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  setCategory: (c: string) => void;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "setLoading", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [loading, setLoading] = useState<boolean>(true);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [notes, setNotes] = useState<Note[]>([]);$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setSearch", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const [search, setSearch] = useState<string>(\"\");$/", "language": "TypeScript", "kind": "constant", "scope": "useNotes", "scopeKind": "function"}, {"_type": "tag", "name": "setSearch", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  setSearch: (s: string) => void;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  const updateNote = useCallback(async (id: string, input: NoteInput) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^  updateNote: (id: string, input: NoteInput) => Promise<ApiResult<Note>>;$/", "language": "TypeScript", "kind": "property", "scope": "NotesState", "scopeKind": "interface"}, {"_type": "tag", "name": "useNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-18239-18248/frontend/src/hooks/useNotes.ts", "pattern": "/^export function useNotes(): NotesState {$/", "language": "TypeScript", "kind": "function"}], "hash": "cfbb04a0ca04abe245249c0645a53c9e", "format-version": 4, "code-base-name": "frontend", "filename": "frontend/src/hooks/useNotes.ts", "fields": [{"name": "interface NotesState {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "categories: string[];", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "category: string;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "createNote: (input: NoteInput) => Promise<ApiResult<Note>>;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "deleteNote: (id: string) => Promise<ApiResult<true>>;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "loading: boolean;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "notes: Note[];", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "refresh: () => Promise<void>;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "search: string;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "setCategory: (c: string) => void;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "setSearch: (s: string) => void;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}, {"name": "updateNote: (id: string, input: NoteInput) => Promise<ApiResult<Note>>;", "scope": "NotesState", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"31": ""}]}